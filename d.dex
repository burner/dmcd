"\+\+" {:  return Token(this.getLoc(), termincrement); :}
"--" {: return Token(this.getLoc(), termdecrement); :}
"/" {: return Token(this.getLoc(), termdiv); :}
"-" {: return Token(this.getLoc(), termminus); :}
"*" {: return Token(this.getLoc(), termstar); :}
"%" {: return Token(this.getLoc(), termmodulo); :}
"\+" {: return Token(this.getLoc(), termplus); :}
"<<" {: return Token(this.getLoc(), termleftshift); :}
">>" {: return Token(this.getLoc(), termrightshift); :}
">>>" {: return Token(this.getLoc(), termunsignedrightshift); :}
"!is" {: return Token(this.getLoc(), termbangis); :}
"is" {: return Token(this.getLoc(), termis); :}
"in" {: return Token(this.getLoc(), termin); :}
"==" {: return Token(this.getLoc(), termequal); :}
"!=" {: return Token(this.getLoc(), termnotequal); :}
"<" {: return Token(this.getLoc(), termless); :}
"<=" {: return Token(this.getLoc(), termlessequal); :}
">" {: return Token(this.getLoc(), termgreater); :}
">=" {: return Token(this.getLoc(), termgreaterequal); :}
"!<>=" {: return Token(this.getLoc(), termbangsquareequal); :}
"!<>" {: return Token(this.getLoc(), termbangsquare); :}
"<>" {: return Token(this.getLoc(), termsquare); :}
"<>=" {: return Token(this.getLoc(), termsquareequal); :}
"!>" {: return Token(this.getLoc(), termbanggreater); :}
"!>=" {: return Token(this.getLoc(), termbanggreaterequal); :}
"!<" {: return Token(this.getLoc(), termbangsmaller); :}
"!<=" {: return Token(this.getLoc(), termbangsmallerequal); :}
"&" {: return Token(this.getLoc(), termlogicand); :}
"&&" {: return Token(this.getLoc(), termand); :}
"^" {: return Token(this.getLoc(), termxor); :}
"|" {: return Token(this.getLoc(), termlogicor); :}
"||" {: return Token(this.getLoc(), termor); :}
"!" {: return Token(this.getLoc(), termbang); :}
"~" {: return Token(this.getLoc(), termtilde); :}
":" {: return Token(this.getLoc(), termcolon); :}
"?" {: return Token(this.getLoc(), termquestionmark); :}
"null" {: return Token(this.getLoc(), termnull); :}
"true" {: return Token(this.getLoc(), termtrue); :}
"false" {: return Token(this.getLoc(), termfalse); :}
"=" {: return Token(this.getLoc(), termassign); :}
"$" {: return Token(this.getLoc(), termdollarsym); :}
"+=" {: return Token(this.getLoc(), termplusassign); :}
"-=" {: return Token(this.getLoc(), termminusassign); :}
"/=" {: return Token(this.getLoc(), termdivassign); :}
"*=" {: return Token(this.getLoc(), termmultassign); :}
"%=" {: return Token(this.getLoc(), termmodassign); :}
"&=" {: return Token(this.getLoc(), termandassign); :}
"!=" {: return Token(this.getLoc(), termnotequal); :}
"|=" {: return Token(this.getLoc(), termorassign); :}
"~=" {: return Token(this.getLoc(), termtildeassign); :}
"<<=" {: return Token(this.getLoc(), termleftshiftassign); :}
">>=" {: return Token(this.getLoc(), termrightshiftassign); :}
">>>=" {: return Token(this.getLoc(), termunsignedrightshiftassign); :}
"^=" {: return Token(this.getLoc(), termxorassign); :}
"^^=" {: return Token(this.getLoc(), termxorxorassign); :}
"[:digit:]+" {: return Token(this.getLoc(), terminteger, this.lexText.getString()); :}
"[:digit:]+.[:digit:]+" {: return Token(this.getLoc(), termfloat, this.lexText.getString()); :}
"[ \\t\\n]+" {: return Token(this.getLoc(), -99); :}
